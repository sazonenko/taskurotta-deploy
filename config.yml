#Location of Spring application context:
contextLocation: "classpath*:context/appContext.xml"

#Configuration of actors served by this server:
actorConfig:
  actorPreferences:

    #applied if actorId not found in config when searching for timeoutPolicy - just for config simplifications
    - id: "default"
      timeoutPolicies:
        TASK_START_TO_CLOSE: "TIMEOUT: 30 SECONDS" #TIMEOUT: prefix can be used to specify simple timeouts (template: "TIMEOUT: <int> <TimeUnit>")
        TASK_POLL_TO_COMMIT: "TIMEOUT: 10 SECONDS"

    #wf-example/calculate actors
    - id: "ru.taskurotta.example.calculate.worker.Multiplier#1.0"
      queueName: "qb$multiplier"
    - id: "ru.taskurotta.example.calculate.worker.NumberGenerator#1.0"
      queueName: "qb$number_generator"
    - id: "ru.taskurotta.example.calculate.worker.Summarizer#1.0"
      queueName: "qb$summarizer"
    - id: "ru.taskurotta.example.calculate.decider.MathActionDecider#1.0"
      queueName: "qb$math_action_decider"

#Task server common properties (will be available as placeholders in spring context):
properties:
  db.url: "jdbc:oracle:thin:@ora1-vip.fccland.ru:testext"
  db.user: "taskurotta"
  db.password: "taskurotta"
  db.validating: true  #validate queues existence in DB
  db.autocreating: false #auto create new queues in DB if there are no explicitly configured
  retryTimes: 99999 #retry for dependency graph modification
  recovery.schedule: "*/20 * * * * ?" #run recovery every 20 seconds
  recovery.period: 2 #recoveru scans for checkpoints created {recovery.period + recovery.period.unit} ago
  recovery.period.unit: "DAYS"
  recovery.timeStep: 2 #recovery time step | for monkey test with 10% failChance, recovery period should be covered in less then ~10 steps or it would fail forever
  recovery.timeStep.unit: "DAYS"


#Http server (JETTY) configuration:
#Logging configuration:
logging:
    level: WARN  #root logging level
    loggers:
        ru.taskurotta: DEBUG
#        ru.taskurotta.backend.queue: DEBUG
#        ru.taskurotta.backend.task: DEBUG
#        ru.taskurotta.backend: DEBUG
#        ru.taskurotta.server.recovery: DEBUG
#        ru.taskurotta.dropwizard.resources: DEBUG
#        ru.taskurotta.backend.ora.queue: DEBUG
        com.yammer: INFO
    file:
        enabled: true
        archive: true
        currentLogFilename: ./logs/service.log
        archivedLogFilenamePattern: ./logs/service-%d.log.gz
http:
    port: 8090
    adminPort: 8091

    gzip:
        enabled: false

    requestLog:
        file:
            enabled: true
            archive: true
            currentLogFilename: ./logs/requests.log
            archivedLogFilenamePattern: ./logs/requests-%d.log.gz

#futher config defaults available for customization, see list here:
#http://dropwizard.codahale.com/manual/core/#configuration-defaults